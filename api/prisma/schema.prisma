generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Game {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  players   Player[]
  rounds    Round[]
  endedAt   DateTime?
  gameCode  String    @unique
  name      String
  size      Int
}

model Role {
  id              Int      @id @default(autoincrement())
  name            String
  type            String
  nightTimePrompt String
  roleDesc        String
  players         Player[]
}

model Player {
  id          Int     @id @default(autoincrement())
  isHost      Boolean @default(false)
  name        String
  role        Role?   @relation(fields: [roleId], references: [id])
  roleId      Int?
  game        Game    @relation(fields: [gameId], references: [id])
  gameId      Int
  roundDied   Round?  @relation(fields: [roundDiedId], references: [id])
  roundDiedId Int?
  status      String  @default("alive")
  avatar      String
}

model Round {
  id           Int       @id @default(autoincrement())
  game         Game      @relation(fields: [gameId], references: [id])
  gameId       Int       @unique
  roundNumber  Int
  currentPhase String    @default("day")
  createdAt    DateTime  @default(now())
  died         Player[]
  endedAt      DateTime?
}

model Vote {
  id          Int    @id @default(autoincrement())
  gameId      Int
  roundNumber Int
  voterId     Int
  candidateId Int
  phase       String
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}
